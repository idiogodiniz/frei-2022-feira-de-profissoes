{"ast":null,"code":"\"use strict\";\n\nvar _toArray = require(\"@babel/runtime/helpers/toArray\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.findSchemeNames = findSchemeNames;\nexports.findSchemePaths = findSchemePaths;\nexports.getAllEntitlementsPaths = getAllEntitlementsPaths;\nexports.getAllInfoPlistPaths = getAllInfoPlistPaths;\nexports.getAllPBXProjectPaths = getAllPBXProjectPaths;\nexports.getAllXcodeProjectPaths = getAllXcodeProjectPaths;\nexports.getAppDelegate = getAppDelegate;\nexports.getAppDelegateFilePath = getAppDelegateFilePath;\nexports.getAppDelegateHeaderFilePath = getAppDelegateHeaderFilePath;\nexports.getAppDelegateObjcHeaderFilePath = getAppDelegateObjcHeaderFilePath;\nexports.getEntitlementsPath = getEntitlementsPath;\nexports.getExpoPlistPath = getExpoPlistPath;\nexports.getFileInfo = getFileInfo;\nexports.getInfoPlistPath = getInfoPlistPath;\nexports.getPBXProjectPath = getPBXProjectPath;\nexports.getSourceRoot = getSourceRoot;\nexports.getSupportingPath = getSupportingPath;\nexports.getXcodeProjectPath = getXcodeProjectPath;\n\nfunction _fs() {\n  var data = require(\"fs\");\n\n  _fs = function _fs() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _glob() {\n  var data = require(\"glob\");\n\n  _glob = function _glob() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction path() {\n  var data = _interopRequireWildcard(require(\"path\"));\n\n  path = function path() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _errors() {\n  var data = require(\"../utils/errors\");\n\n  _errors = function _errors() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _warnings() {\n  var data = require(\"../utils/warnings\");\n\n  _warnings = function _warnings() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction Entitlements() {\n  var data = _interopRequireWildcard(require(\"./Entitlements\"));\n\n  Entitlements = function Entitlements() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _getRequireWildcardCache(nodeInterop) {\n  if (typeof WeakMap !== \"function\") return null;\n  var cacheBabelInterop = new WeakMap();\n  var cacheNodeInterop = new WeakMap();\n  return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) {\n    return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n  })(nodeInterop);\n}\n\nfunction _interopRequireWildcard(obj, nodeInterop) {\n  if (!nodeInterop && obj && obj.__esModule) {\n    return obj;\n  }\n\n  if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") {\n    return {\n      default: obj\n    };\n  }\n\n  var cache = _getRequireWildcardCache(nodeInterop);\n\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n  for (var key in obj) {\n    if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n\n  newObj.default = obj;\n\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n\n  return newObj;\n}\n\nvar ignoredPaths = ['**/@(Carthage|Pods|vendor|node_modules)/**'];\n\nfunction getAppDelegateHeaderFilePath(projectRoot) {\n  var _ref = (0, _glob().sync)('ios/*/AppDelegate.h', {\n    absolute: true,\n    cwd: projectRoot,\n    ignore: ignoredPaths\n  }),\n      _ref2 = _toArray(_ref),\n      using = _ref2[0],\n      extra = _ref2.slice(1);\n\n  if (!using) {\n    throw new (_errors().UnexpectedError)(\"Could not locate a valid AppDelegate header at root: \\\"\" + projectRoot + \"\\\"\");\n  }\n\n  if (extra.length) {\n    warnMultipleFiles({\n      tag: 'app-delegate-header',\n      fileName: 'AppDelegate',\n      projectRoot: projectRoot,\n      using: using,\n      extra: extra\n    });\n  }\n\n  return using;\n}\n\nfunction getAppDelegateFilePath(projectRoot) {\n  var _ref3 = (0, _glob().sync)('ios/*/AppDelegate.@(m|mm|swift)', {\n    absolute: true,\n    cwd: projectRoot,\n    ignore: ignoredPaths\n  }),\n      _ref4 = _toArray(_ref3),\n      using = _ref4[0],\n      extra = _ref4.slice(1);\n\n  if (!using) {\n    throw new (_errors().UnexpectedError)(\"Could not locate a valid AppDelegate at root: \\\"\" + projectRoot + \"\\\"\");\n  }\n\n  if (extra.length) {\n    warnMultipleFiles({\n      tag: 'app-delegate',\n      fileName: 'AppDelegate',\n      projectRoot: projectRoot,\n      using: using,\n      extra: extra\n    });\n  }\n\n  return using;\n}\n\nfunction getAppDelegateObjcHeaderFilePath(projectRoot) {\n  var _ref5 = (0, _glob().sync)('ios/*/AppDelegate.h', {\n    absolute: true,\n    cwd: projectRoot,\n    ignore: ignoredPaths\n  }),\n      _ref6 = _toArray(_ref5),\n      using = _ref6[0],\n      extra = _ref6.slice(1);\n\n  if (!using) {\n    throw new (_errors().UnexpectedError)(\"Could not locate a valid AppDelegate.h at root: \\\"\" + projectRoot + \"\\\"\");\n  }\n\n  if (extra.length) {\n    warnMultipleFiles({\n      tag: 'app-delegate-objc-header',\n      fileName: 'AppDelegate.h',\n      projectRoot: projectRoot,\n      using: using,\n      extra: extra\n    });\n  }\n\n  return using;\n}\n\nfunction getLanguage(filePath) {\n  var extension = path().extname(filePath);\n\n  switch (extension) {\n    case '.mm':\n      return 'objcpp';\n\n    case '.m':\n    case '.h':\n      return 'objc';\n\n    case '.swift':\n      return 'swift';\n\n    default:\n      throw new (_errors().UnexpectedError)(\"Unexpected iOS file extension: \" + extension);\n  }\n}\n\nfunction getFileInfo(filePath) {\n  return {\n    path: path().normalize(filePath),\n    contents: (0, _fs().readFileSync)(filePath, 'utf8'),\n    language: getLanguage(filePath)\n  };\n}\n\nfunction getAppDelegate(projectRoot) {\n  var filePath = getAppDelegateFilePath(projectRoot);\n  return getFileInfo(filePath);\n}\n\nfunction getSourceRoot(projectRoot) {\n  var appDelegate = getAppDelegate(projectRoot);\n  return path().dirname(appDelegate.path);\n}\n\nfunction findSchemePaths(projectRoot) {\n  return (0, _glob().sync)('ios/*.xcodeproj/xcshareddata/xcschemes/*.xcscheme', {\n    absolute: true,\n    cwd: projectRoot,\n    ignore: ignoredPaths\n  });\n}\n\nfunction findSchemeNames(projectRoot) {\n  var schemePaths = findSchemePaths(projectRoot);\n  return schemePaths.map(function (schemePath) {\n    return path().parse(schemePath).name;\n  });\n}\n\nfunction getAllXcodeProjectPaths(projectRoot) {\n  var iosFolder = 'ios';\n  var pbxprojPaths = (0, _glob().sync)('ios/**/*.xcodeproj', {\n    cwd: projectRoot,\n    ignore: ignoredPaths\n  }).filter(function (project) {\n    return !/test|example|sample/i.test(project) || path().dirname(project) === iosFolder;\n  }).sort().sort(function (a, b) {\n    var isAInIos = path().dirname(a) === iosFolder;\n    var isBInIos = path().dirname(b) === iosFolder;\n\n    if (isAInIos && isBInIos || !isAInIos && !isBInIos) {\n      return 0;\n    }\n\n    return isAInIos ? -1 : 1;\n  });\n\n  if (!pbxprojPaths.length) {\n    throw new (_errors().UnexpectedError)(\"Failed to locate the ios/*.xcodeproj files relative to path \\\"\" + projectRoot + \"\\\".\");\n  }\n\n  return pbxprojPaths.map(function (value) {\n    return path().join(projectRoot, value);\n  });\n}\n\nfunction getXcodeProjectPath(projectRoot) {\n  var _getAllXcodeProjectPa = getAllXcodeProjectPaths(projectRoot),\n      _getAllXcodeProjectPa2 = _toArray(_getAllXcodeProjectPa),\n      using = _getAllXcodeProjectPa2[0],\n      extra = _getAllXcodeProjectPa2.slice(1);\n\n  if (extra.length) {\n    warnMultipleFiles({\n      tag: 'xcodeproj',\n      fileName: '*.xcodeproj',\n      projectRoot: projectRoot,\n      using: using,\n      extra: extra\n    });\n  }\n\n  return using;\n}\n\nfunction getAllPBXProjectPaths(projectRoot) {\n  var projectPaths = getAllXcodeProjectPaths(projectRoot);\n  var paths = projectPaths.map(function (value) {\n    return path().join(value, 'project.pbxproj');\n  }).filter(function (value) {\n    return (0, _fs().existsSync)(value);\n  });\n\n  if (!paths.length) {\n    throw new (_errors().UnexpectedError)(\"Failed to locate the ios/*.xcodeproj/project.pbxproj files relative to path \\\"\" + projectRoot + \"\\\".\");\n  }\n\n  return paths;\n}\n\nfunction getPBXProjectPath(projectRoot) {\n  var _getAllPBXProjectPath = getAllPBXProjectPaths(projectRoot),\n      _getAllPBXProjectPath2 = _toArray(_getAllPBXProjectPath),\n      using = _getAllPBXProjectPath2[0],\n      extra = _getAllPBXProjectPath2.slice(1);\n\n  if (extra.length) {\n    warnMultipleFiles({\n      tag: 'project-pbxproj',\n      fileName: 'project.pbxproj',\n      projectRoot: projectRoot,\n      using: using,\n      extra: extra\n    });\n  }\n\n  return using;\n}\n\nfunction getAllInfoPlistPaths(projectRoot) {\n  var paths = (0, _glob().sync)('ios/*/Info.plist', {\n    absolute: true,\n    cwd: projectRoot,\n    ignore: ignoredPaths\n  }).sort(function (a, b) {\n    return a.length - b.length;\n  });\n\n  if (!paths.length) {\n    throw new (_errors().UnexpectedError)(\"Failed to locate Info.plist files relative to path \\\"\" + projectRoot + \"\\\".\");\n  }\n\n  return paths;\n}\n\nfunction getInfoPlistPath(projectRoot) {\n  var _getAllInfoPlistPaths = getAllInfoPlistPaths(projectRoot),\n      _getAllInfoPlistPaths2 = _toArray(_getAllInfoPlistPaths),\n      using = _getAllInfoPlistPaths2[0],\n      extra = _getAllInfoPlistPaths2.slice(1);\n\n  if (extra.length) {\n    warnMultipleFiles({\n      tag: 'info-plist',\n      fileName: 'Info.plist',\n      projectRoot: projectRoot,\n      using: using,\n      extra: extra\n    });\n  }\n\n  return using;\n}\n\nfunction getAllEntitlementsPaths(projectRoot) {\n  var paths = (0, _glob().sync)('ios/*/*.entitlements', {\n    absolute: true,\n    cwd: projectRoot,\n    ignore: ignoredPaths\n  });\n  return paths;\n}\n\nfunction getEntitlementsPath(projectRoot) {\n  return Entitlements().getEntitlementsPath(projectRoot);\n}\n\nfunction getSupportingPath(projectRoot) {\n  return path().resolve(projectRoot, 'ios', path().basename(getSourceRoot(projectRoot)), 'Supporting');\n}\n\nfunction getExpoPlistPath(projectRoot) {\n  var supportingPath = getSupportingPath(projectRoot);\n  return path().join(supportingPath, 'Expo.plist');\n}\n\nfunction warnMultipleFiles(_ref7) {\n  var tag = _ref7.tag,\n      fileName = _ref7.fileName,\n      projectRoot = _ref7.projectRoot,\n      using = _ref7.using,\n      extra = _ref7.extra;\n  var usingPath = projectRoot ? path().relative(projectRoot, using) : using;\n  var extraPaths = projectRoot ? extra.map(function (v) {\n    return path().relative(projectRoot, v);\n  }) : extra;\n  (0, _warnings().addWarningIOS)(\"paths-\" + tag, \"Found multiple \" + fileName + \" file paths, using \\\"\" + usingPath + \"\\\". Ignored paths: \" + JSON.stringify(extraPaths));\n}","map":{"version":3,"mappings":"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","names":["_fs","_glob","path","_errors","_warnings","Entitlements","ignoredPaths","getAppDelegateHeaderFilePath","projectRoot","absolute","cwd","ignore","using","extra","UnexpectedError","length","warnMultipleFiles","tag","fileName","getAppDelegateFilePath","getAppDelegateObjcHeaderFilePath","getLanguage","filePath","extension","extname","getFileInfo","normalize","contents","language","getAppDelegate","getSourceRoot","appDelegate","dirname","findSchemePaths","findSchemeNames","schemePaths","map","schemePath","parse","name","getAllXcodeProjectPaths","iosFolder","pbxprojPaths","filter","project","test","sort","a","b","isAInIos","isBInIos","value","join","getXcodeProjectPath","getAllPBXProjectPaths","projectPaths","paths","getPBXProjectPath","getAllInfoPlistPaths","getInfoPlistPath","getAllEntitlementsPaths","getEntitlementsPath","getSupportingPath","resolve","basename","getExpoPlistPath","supportingPath","usingPath","relative","extraPaths","v","JSON","stringify"],"sources":["../../src/ios/Paths.ts"],"sourcesContent":["import { existsSync, readFileSync } from 'fs';\nimport { sync as globSync } from 'glob';\nimport * as path from 'path';\n\nimport { UnexpectedError } from '../utils/errors';\nimport { addWarningIOS } from '../utils/warnings';\nimport * as Entitlements from './Entitlements';\n\nconst ignoredPaths = ['**/@(Carthage|Pods|vendor|node_modules)/**'];\n\ninterface ProjectFile<L extends string = string> {\n  path: string;\n  language: L;\n  contents: string;\n}\n\ntype AppleLanguage = 'objc' | 'objcpp' | 'swift';\n\nexport type AppDelegateProjectFile = ProjectFile<AppleLanguage>;\n\nexport function getAppDelegateHeaderFilePath(projectRoot: string): string {\n  const [using, ...extra] = globSync('ios/*/AppDelegate.h', {\n    absolute: true,\n    cwd: projectRoot,\n    ignore: ignoredPaths,\n  });\n\n  if (!using) {\n    throw new UnexpectedError(\n      `Could not locate a valid AppDelegate header at root: \"${projectRoot}\"`\n    );\n  }\n\n  if (extra.length) {\n    warnMultipleFiles({\n      tag: 'app-delegate-header',\n      fileName: 'AppDelegate',\n      projectRoot,\n      using,\n      extra,\n    });\n  }\n\n  return using;\n}\n\nexport function getAppDelegateFilePath(projectRoot: string): string {\n  const [using, ...extra] = globSync('ios/*/AppDelegate.@(m|mm|swift)', {\n    absolute: true,\n    cwd: projectRoot,\n    ignore: ignoredPaths,\n  });\n\n  if (!using) {\n    throw new UnexpectedError(`Could not locate a valid AppDelegate at root: \"${projectRoot}\"`);\n  }\n\n  if (extra.length) {\n    warnMultipleFiles({\n      tag: 'app-delegate',\n      fileName: 'AppDelegate',\n      projectRoot,\n      using,\n      extra,\n    });\n  }\n\n  return using;\n}\n\nexport function getAppDelegateObjcHeaderFilePath(projectRoot: string): string {\n  const [using, ...extra] = globSync('ios/*/AppDelegate.h', {\n    absolute: true,\n    cwd: projectRoot,\n    ignore: ignoredPaths,\n  });\n\n  if (!using) {\n    throw new UnexpectedError(`Could not locate a valid AppDelegate.h at root: \"${projectRoot}\"`);\n  }\n\n  if (extra.length) {\n    warnMultipleFiles({\n      tag: 'app-delegate-objc-header',\n      fileName: 'AppDelegate.h',\n      projectRoot,\n      using,\n      extra,\n    });\n  }\n\n  return using;\n}\n\nfunction getLanguage(filePath: string): AppleLanguage {\n  const extension = path.extname(filePath);\n  switch (extension) {\n    case '.mm':\n      return 'objcpp';\n    case '.m':\n    case '.h':\n      return 'objc';\n    case '.swift':\n      return 'swift';\n    default:\n      throw new UnexpectedError(`Unexpected iOS file extension: ${extension}`);\n  }\n}\n\nexport function getFileInfo(filePath: string) {\n  return {\n    path: path.normalize(filePath),\n    contents: readFileSync(filePath, 'utf8'),\n    language: getLanguage(filePath),\n  };\n}\n\nexport function getAppDelegate(projectRoot: string): AppDelegateProjectFile {\n  const filePath = getAppDelegateFilePath(projectRoot);\n  return getFileInfo(filePath);\n}\n\nexport function getSourceRoot(projectRoot: string): string {\n  const appDelegate = getAppDelegate(projectRoot);\n  return path.dirname(appDelegate.path);\n}\n\nexport function findSchemePaths(projectRoot: string): string[] {\n  return globSync('ios/*.xcodeproj/xcshareddata/xcschemes/*.xcscheme', {\n    absolute: true,\n    cwd: projectRoot,\n    ignore: ignoredPaths,\n  });\n}\n\nexport function findSchemeNames(projectRoot: string): string[] {\n  const schemePaths = findSchemePaths(projectRoot);\n  return schemePaths.map((schemePath) => path.parse(schemePath).name);\n}\n\nexport function getAllXcodeProjectPaths(projectRoot: string): string[] {\n  const iosFolder = 'ios';\n  const pbxprojPaths = globSync('ios/**/*.xcodeproj', { cwd: projectRoot, ignore: ignoredPaths })\n    .filter(\n      (project) => !/test|example|sample/i.test(project) || path.dirname(project) === iosFolder\n    )\n    // sort alphabetically to ensure this works the same across different devices (Fail in CI (linux) without this)\n    .sort()\n    .sort((a, b) => {\n      const isAInIos = path.dirname(a) === iosFolder;\n      const isBInIos = path.dirname(b) === iosFolder;\n      // preserve previous sort order\n      if ((isAInIos && isBInIos) || (!isAInIos && !isBInIos)) {\n        return 0;\n      }\n      return isAInIos ? -1 : 1;\n    });\n\n  if (!pbxprojPaths.length) {\n    throw new UnexpectedError(\n      `Failed to locate the ios/*.xcodeproj files relative to path \"${projectRoot}\".`\n    );\n  }\n  return pbxprojPaths.map((value) => path.join(projectRoot, value));\n}\n\n/**\n * Get the pbxproj for the given path\n */\nexport function getXcodeProjectPath(projectRoot: string): string {\n  const [using, ...extra] = getAllXcodeProjectPaths(projectRoot);\n\n  if (extra.length) {\n    warnMultipleFiles({\n      tag: 'xcodeproj',\n      fileName: '*.xcodeproj',\n      projectRoot,\n      using,\n      extra,\n    });\n  }\n\n  return using;\n}\n\nexport function getAllPBXProjectPaths(projectRoot: string): string[] {\n  const projectPaths = getAllXcodeProjectPaths(projectRoot);\n  const paths = projectPaths\n    .map((value) => path.join(value, 'project.pbxproj'))\n    .filter((value) => existsSync(value));\n\n  if (!paths.length) {\n    throw new UnexpectedError(\n      `Failed to locate the ios/*.xcodeproj/project.pbxproj files relative to path \"${projectRoot}\".`\n    );\n  }\n  return paths;\n}\n\nexport function getPBXProjectPath(projectRoot: string): string {\n  const [using, ...extra] = getAllPBXProjectPaths(projectRoot);\n\n  if (extra.length) {\n    warnMultipleFiles({\n      tag: 'project-pbxproj',\n      fileName: 'project.pbxproj',\n      projectRoot,\n      using,\n      extra,\n    });\n  }\n\n  return using;\n}\n\nexport function getAllInfoPlistPaths(projectRoot: string): string[] {\n  const paths = globSync('ios/*/Info.plist', {\n    absolute: true,\n    cwd: projectRoot,\n    ignore: ignoredPaths,\n  }).sort(\n    // longer name means more suffixes, we want the shortest possible one to be first.\n    (a, b) => a.length - b.length\n  );\n\n  if (!paths.length) {\n    throw new UnexpectedError(\n      `Failed to locate Info.plist files relative to path \"${projectRoot}\".`\n    );\n  }\n  return paths;\n}\n\nexport function getInfoPlistPath(projectRoot: string): string {\n  const [using, ...extra] = getAllInfoPlistPaths(projectRoot);\n\n  if (extra.length) {\n    warnMultipleFiles({\n      tag: 'info-plist',\n      fileName: 'Info.plist',\n      projectRoot,\n      using,\n      extra,\n    });\n  }\n\n  return using;\n}\n\nexport function getAllEntitlementsPaths(projectRoot: string): string[] {\n  const paths = globSync('ios/*/*.entitlements', {\n    absolute: true,\n    cwd: projectRoot,\n    ignore: ignoredPaths,\n  });\n  return paths;\n}\n\n/**\n * @deprecated: use Entitlements.getEntitlementsPath instead\n */\nexport function getEntitlementsPath(projectRoot: string): string | null {\n  return Entitlements.getEntitlementsPath(projectRoot);\n}\n\nexport function getSupportingPath(projectRoot: string): string {\n  return path.resolve(projectRoot, 'ios', path.basename(getSourceRoot(projectRoot)), 'Supporting');\n}\n\nexport function getExpoPlistPath(projectRoot: string): string {\n  const supportingPath = getSupportingPath(projectRoot);\n  return path.join(supportingPath, 'Expo.plist');\n}\n\nfunction warnMultipleFiles({\n  tag,\n  fileName,\n  projectRoot,\n  using,\n  extra,\n}: {\n  tag: string;\n  fileName: string;\n  projectRoot?: string;\n  using: string;\n  extra: string[];\n}) {\n  const usingPath = projectRoot ? path.relative(projectRoot, using) : using;\n  const extraPaths = projectRoot ? extra.map((v) => path.relative(projectRoot, v)) : extra;\n  addWarningIOS(\n    `paths-${tag}`,\n    `Found multiple ${fileName} file paths, using \"${usingPath}\". Ignored paths: ${JSON.stringify(\n      extraPaths\n    )}`\n  );\n}\n"]},"metadata":{},"sourceType":"script"}